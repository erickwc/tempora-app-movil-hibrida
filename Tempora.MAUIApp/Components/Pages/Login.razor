@page "/login"
@inject NavigationManager navManager
@inject UsuarioService usuarioService
@inject IJSRuntime jsRuntime

<main style="gap:44px; justify-content:center; display:flex; flex-direction:column; height:100vh;">

    <section class="center grid" style="gap:16px;">
        <h1 class="t32">Inicia Sesión</h1>
        <p class="parr">Ingresa tu número de teléfono y contraseña para entrar a tu cuenta</p>
    </section>

    <section class="grid" style="gap:44px;">
        <EditForm Model="credenciales" OnValidSubmit="Autenticar">
            <section class="grid" style="gap:24px;">
                <div class="grid" style="gap:10px;">
                    <label>Teléfono</label>
                    <div class="inp-cont">
                        <img class="ico-inp left" src="/Images/phone.svg" alt="Teléfono" />
                        <InputText @bind-Value="credenciales.Telefono" placeholder="Ingresa tu número de teléfono" class="inp parr" />
                    </div>
                </div>

                <div class="grid" style="gap:10px;">
                    <label>Contraseña</label>
                    <div class="inp-cont">
                        <img class="ico-inp left" src="/Images/pass.svg" alt="Icono de contraseña" />
                        <InputText @bind-Value="credenciales.Clave" placeholder="Ingresa tu contraseña" type="password" class="inp parr" />
                    </div>
                </div>
            </section>

            <button class="bton bton-black">Iniciar Sesión</button>
        </EditForm>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="error-message" style="color: red;">@errorMessage</div>
        }
    </section>
    <p class="center">¿Aún no tienes una cuenta? <span @onclick="createAccount" class="t16" style="cursor:pointer;">Crear una</span></p>

</main>

@code {
    private string errorMessage; 

    private void createAccount()
    {
        navManager.NavigateTo("/register");
    }

    Credenciales credenciales = new Credenciales();

    private async Task Autenticar()
    {
        Usuario usuario = await usuarioService.Autenticar(credenciales);
        if (usuario.UsuarioId > 0)
        {
            await jsRuntime.InvokeVoidAsync("localStorage.setItem", "UsuarioId", usuario.UsuarioId);
            navManager.NavigateTo("/home");
        }
        else
        {
            errorMessage = "La contraseña o el teléfono son incorrectos.";
        }
    }
}
