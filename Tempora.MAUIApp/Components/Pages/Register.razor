@page "/register"
@inject NavigationManager navManager
@inject UsuarioService usuarioService
@inject IJSRuntime jsRuntime

<main style="gap:44px; justify-content:center; display:flex; flex-direction:column; height:100vh;">

    <section class="grid" style="gap:16px;">
        <h1 class="t32">Crea tu cuenta</h1>
        <p class="parr">Completa los siguientes datos para crear tu cuenta en la plataforma</p>
    </section>

    <section class="grid" style="gap:44px;">
        <section class="grid" style="gap:24px;">

            <div class="grid" style="gap:10px;">
                <label>Nombre completo</label>
                <div class="inp-cont">
                    <img class="ico-inp left" src="/Images/name.svg" alt="Icono de nombre" />
                    <input placeholder="Ingresa tu nombre y un apellido" class="inp parr" type="text" @bind="usuario.Nombre" />
                </div>
            </div>

            <div class="grid" style="gap:10px;">
                <label>Teléfono</label>
                <div class="inp-cont">
                    <img class="ico-inp left" src="/Images/phone.svg" alt="Icono de teléfono" />
                    <input placeholder="Ingresa tu número de teléfono" class="inp parr" type="number" @bind="usuario.Telefono" />
                </div>
            </div>

            <div class="grid" style="gap:10px;">
                <label>Contraseña</label>
                <div class="inp-cont">
                    <img class="ico-inp left" src="/Images/pass.svg" alt="Icono de contraseña" />
                    <input placeholder="Ingresa tu contraseña" class="inp parr" type="@inputTypePassword" @bind="usuario.Clave" />
                    <img class="ico-inp right" src="/Images/open.svg" alt="Mostrar contraseña" @onclick="TogglePasswordVisibilityPassword" style="display: @(showPassword ? "block" : "none")" />
                    <img class="ico-inp right" src="/Images/close.svg" alt="Ocultar contraseña" @onclick="TogglePasswordVisibilityPassword" style="display: @(showPassword ? "none" : "block")" />
                </div>
            </div>

            <div class="grid" style="gap:10px;">
                <label>Confirmar Contraseña</label>
                <div class="inp-cont">
                    <img class="ico-inp left" src="/Images/pass.svg" alt="Icono de contraseña" />
                    <input placeholder="Confirma tu contraseña" class="inp parr" type="@inputTypeConfirmPassword" @bind="confirmPassword" />
                    <img class="ico-inp right" src="/Images/open.svg" alt="Mostrar contraseña" @onclick="TogglePasswordVisibilityConfirmPassword" style="display: @(showConfirmPassword ? "block" : "none")" />
                    <img class="ico-inp right" src="/Images/close.svg" alt="Ocultar contraseña" @onclick="TogglePasswordVisibilityConfirmPassword" style="display: @(showConfirmPassword ? "none" : "block")" />
                </div>
            </div>

            @if (!contraseñasCoinciden)
            {
                <p style="color: red;">Las contraseñas no coinciden.</p>
            }

        </section>

        <button @onclick="Guardar" class="bton bton-black" type="submit">Crear cuenta</button>
    </section>
    <p class="center">¿Ya tienes una cuenta? <span @onclick="login" class="t16" style="cursor:pointer;">Iniciar Sesión</span> </p>

</main>

@code {
    private Usuario usuario = new Usuario();
    private string confirmPassword;
    private bool showPassword = false;
    private bool showConfirmPassword = false;
    private string inputTypePassword = "password";
    private string inputTypeConfirmPassword = "password";
    private bool contraseñasCoinciden = true;

    private void login()
    {
        navManager.NavigateTo("/login");
    }

    private async Task Guardar()
    {
        // Verifica si las contraseñas coinciden antes de guardar
        if (usuario.Clave != confirmPassword)
        {
            contraseñasCoinciden = false; // Cambia a false si no coinciden
            return;
        }

        contraseñasCoinciden = true; // Resetea a true si las contraseñas coinciden
        await usuarioService.Guardar(usuario);

        // Aquí puedes autenticar automáticamente después de crear la cuenta
        var credenciales = new Credenciales
            {
                Telefono = usuario.Telefono, // Asegúrate de que esto esté configurado correctamente
                Clave = usuario.Clave
            };

        await Autenticar(credenciales);
    }

    private async Task Autenticar(Credenciales credenciales)
    {
        // Lógica de autenticación
        Usuario usuarioAutenticado = await usuarioService.Autenticar(credenciales);
        if (usuarioAutenticado.UsuarioId > 0)
        {
            // Credenciales correctas
            await jsRuntime.InvokeVoidAsync("localStorage.setItem", "UsuarioId", usuarioAutenticado.UsuarioId);
            // Navegar
            navManager.NavigateTo("/home");
        }
        else
        {
            // Manejar credenciales incorrectas si es necesario
        }
    }

    private void TogglePasswordVisibilityPassword()
    {
        showPassword = !showPassword;
        inputTypePassword = showPassword ? "text" : "password";
    }

    private void TogglePasswordVisibilityConfirmPassword()
    {
        showConfirmPassword = !showConfirmPassword;
        inputTypeConfirmPassword = showConfirmPassword ? "text" : "password";
    }
}
