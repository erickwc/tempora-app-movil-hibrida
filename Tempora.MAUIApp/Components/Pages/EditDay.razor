@page "/editday/{diaId:long}"
@inject NavigationManager navManager
@inject DiaService diaService

<main style="gap:24px; display:flex; flex-direction:column; justify-content:space-between; height:100vh;">

    <section class="d-grid" style="gap:48px;">
        <section class="mt-4" style="gap:24px; display:flex; align-items:center; justify-content:space-between;">
            <button @onclick="Regresar" class="btn-goback"> <img src="/Images/back.svg" alt="Alternate Text" /> </button>
            <div>
                <h1 class="t20">Editar</h1>
               @*  <p class="parr">Edita tus horas</p> *@
            </div>
            <button data-bs-toggle="modal" data-bs-target="#staticBackdrop2" class="btn-goback"> <img src="/Images/delete.svg" alt="Alternate Text" /> </button>

        </section>


        <section class="d-grid" style="gap:48px;">

            <div class="d-grid" style="gap:24px;">
                <section class="grid">
                    <h1 class="t16">Fecha de actividad</h1>
                </section>

                <section class="grid" style="gap:24px;">
                    <div class="grid" style="gap:10px;">
                        <div class="inp-cont">
                            <img class="ico-inp left" src="/Images/date.svg" alt="Alternate Text" />
                            <input placeholder="Ingresa el nombre" class="inp parr" type="date" @bind="@dia.Fecha" />
                        </div>
                    </div>
                </section>
            </div>

            <div class="d-grid" style="gap:24px;">

                <section class="d-flex justify-content-between align-items-center">
                    <section class="grid">
                        <h1 class="t16">Turno de la mañana</h1>
                    </section>
                    <img data-bs-toggle="modal" data-bs-target="#staticBackdrop" src="/Images/quest.svg" alt="Alternate Text" />
                </section>

                <section class="d-grid" style="gap:24px; grid-template-columns:1fr 1fr;">
                    <div class="grid" style="gap:10px;">
                        <label>Hora de inicio</label>
                        <div class="inp-cont">
                            <img class="ico-inp left" src="/Images/hours.svg" alt="Alternate Text" />
                            <input placeholder="Ingresa la hora" class="inp parr" type="time"
                                   value="@dia.HoraInicioManana?.ToString(@"hh\:mm")"
                                   @onchange="(e) => { dia.HoraInicioManana = TimeSpan.Parse(e.Value.ToString()); CalcularHorasTotales(); }" />

                        </div>
                    </div>

                    <div class="grid" style="gap:10px;">
                        <label>Hora de finalización</label>
                        <div class="inp-cont">
                            <img class="ico-inp left" src="/Images/hours.svg" alt="Alternate Text" />
                            <input placeholder="Ingresa la hora" class="inp parr" type="time"
                                   value="@dia.HoraFinManana?.ToString(@"hh\:mm")"
                                   @onchange="(e) => { dia.HoraFinManana = TimeSpan.Parse(e.Value.ToString()); CalcularHorasTotales(); }" />

                        </div>
                    </div>
                </section>
            </div>

            <div class="d-grid" style="gap:24px;">
                <section class="grid">
                    <h1 class="t16">Turno de la tarde</h1>
                </section>

                <section class="d-grid" style="gap:24px; grid-template-columns:1fr 1fr;">

                    <div class="grid" style="gap:10px; width:100%;">
                        <label>Hora de inicio</label>
                        <div class="inp-cont">
                            <img class="ico-inp left" src="/Images/hours.svg" alt="Alternate Text" />
                            <input placeholder="Ingresa la hora" class="inp parr" type="time"
                                   value="@dia.HoraInicioTarde?.ToString(@"hh\:mm")"
                                   @onchange="(e) => { dia.HoraInicioTarde = TimeSpan.Parse(e.Value.ToString()); CalcularHorasTotales(); }" />

                        </div>
                    </div>

                    <div class="grid" style="gap:10px; width:100%;">
                        <label>Hora de finalización</label>
                        <div class="inp-cont">
                            <img class="ico-inp left" src="/Images/hours.svg" alt="Alternate Text" />
                            <input placeholder="Ingresa la hora" class="inp parr" type="time"
       value="@dia.HoraFinTarde?.ToString(@"hh\:mm")"
       @onchange="(e) => { dia.HoraFinTarde = TimeSpan.Parse(e.Value.ToString()); CalcularHorasTotales(); }" />
                        </div>
                    </div>

                </section>
            </div>
            

            <div class="grid d-none" style="gap:10px; width:100%;">
                <label>Hora de finalización</label>
                <div class="inp-cont">
                    <img class="ico-inp left" src="/Images/hours.svg" alt="Alternate Text" />
                    <input placeholder="Ingresa la hora" class="inp parr" type="text" @bind="@dia.PeriodoId" />
                </div>
            </div>

            <div class="grid" style="gap:10px; width:100%;">
                <label>Hora de finalización</label>
                <div class="inp-cont">
                    <img class="ico-inp left" src="/Images/hours.svg" alt="Alternate Text" />
                    <input placeholder="Total de horas" class="inp parr" type="text" value="@dia.HorasTotales" readonly />
                </div>
            </div>



        </section>
    </section>

    <button @onclick="EditarDia" class="bton bton-black" style="margin-bottom:24px;" type="submit">Guardar nuevo día</button>

</main>


<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content d-grid" style="padding:32px 16px; gap:24px; border-radius:24px; margin:0px 16px;">
            <div class="d-grid" style="gap:8px;">
                <h2 class="t20 center">Turnos opcionales</h2>
                <p class="parr center">Si solo realizas el turno de la mañana puedes dejar el turno de la tarde vacio o viceversa.</p>
            </div>
            <div class="d-grid" style="gap:8px;">
                <button data-bs-dismiss="modal" aria-label="Close" class="bton bton-black">Regresar</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="staticBackdrop2" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content d-grid" style="padding:32px 16px; gap:24px; border-radius:24px; margin:0px 16px;">
            <div class="d-grid" style="gap:8px;">
                <h2 class="t20 center">¿Estas seguro de eliminar?</h2>
                <p class="parr center">Si eliminas este día, toda la información relacionada se perderá para siempre.</p>
            </div>
            <div class="d-grid" style="gap:8px;">
                <button data-bs-dismiss="modal" aria-label="Close" @onclick="EliminarDia"class="bton bton-black">Si, quiero eliminar este día</button>
                <button type="button" data-bs-dismiss="modal" aria-label="Close" class="bton bton-white">Cancelar</button>
            </div>
        </div>
    </div>
</div>

@code {
    private void Regresar()
    {
        navManager.NavigateTo($"/days/{dia.PeriodoId}");
    }

    private Dia dia = new Dia();

    [Parameter]
    public long diaId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        dia = await diaService.ObtenerPorId(diaId);
    }

    private async Task EliminarDia()
    {
        await diaService.Eliminar(diaId);
        Regresar();
    }

    private async Task EditarDia()
    {
        // Asegúrate de que las horas sean '00:00:00' si están vacías
        if (dia.HoraInicioManana == null)
        {
            dia.HoraInicioManana = TimeSpan.Zero;
        }
        if (dia.HoraFinManana == null)
        {
            dia.HoraFinManana = TimeSpan.Zero;
        }
        if (dia.HoraInicioTarde == null)
        {
            dia.HoraInicioTarde = TimeSpan.Zero;
        }
        if (dia.HoraFinTarde == null)
        {
            dia.HoraFinTarde = TimeSpan.Zero;
        }

        await diaService.Editar(dia);
        Regresar();
    }

    private void CalcularHorasTotales()
    {
        TimeSpan horasManana = (dia.HoraFinManana ?? TimeSpan.Zero) - (dia.HoraInicioManana ?? TimeSpan.Zero);
        TimeSpan horasTarde = (dia.HoraFinTarde ?? TimeSpan.Zero) - (dia.HoraInicioTarde ?? TimeSpan.Zero);

        if (horasManana < TimeSpan.Zero) horasManana = TimeSpan.Zero;
        if (horasTarde < TimeSpan.Zero) horasTarde = TimeSpan.Zero;

        TimeSpan totalHoras = horasManana + horasTarde;

        dia.HorasTotales = totalHoras.ToString(@"h\:mm"); // Formato "h:mm"
    }
}

