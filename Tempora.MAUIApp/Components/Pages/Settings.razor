@page "/settings"
@inject NavigationManager navManager
@inject UsuarioService usuarioService
@inject PeriodoService periodoService
@inject EstadoService estadoService
@inject IJSRuntime jsRuntime


<main>
    <section class="mt-4" style="gap:16px; display:flex; align-items:center; justify-content:space-between;">
        <button @onclick="Regresar" class="btn-goback"> <img src="/Images/back.svg" alt="Alternate Text" /> </button>
        <div>
            <h1 class="t20">Ajustes</h1>
        </div>
        <button @onclick="Account" data-bs-toggle="modal" data-bs-target="#staticBackdrop" class="btn-goback"> <img src="/Images/nav.svg" alt="Alternate Text" /> </button>
    </section>
</main>

<section class="d-grid" style=" height:80vh; place-items:center;">
    <section class="d-grid text-center" style="gap:8px;">
        <h2 class="t16">@nombre</h2>
        <p class="parr">@horas</p>
        <button @onclick="Profile" style="justify-content:space-evenly;" class="bton bton-black">Editar perfil</button>
    </section>
</section>

@code {
    private void Regresar()
    {
        navManager.NavigateTo("/home");
    }

    private void Profile()
    {
        navManager.NavigateTo("/profile");
    }

    private void Account()
    {
        navManager.NavigateTo("/account");
    }

    int usuarioId;
    private string nombre;
    private string horas;

    protected override async Task OnInitializedAsync()
    {
        string dato = await jsRuntime.InvokeAsync<string>("localStorage.getItem", "UsuarioId");
        usuarioId = Convert.ToInt32(dato);

        nombre = await usuarioService.ObtenerNombrePorId(usuarioId);
        horas = await periodoService.ObtenerTotalHorasRealizadas(usuarioId);
    }

}
